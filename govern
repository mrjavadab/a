<!DOCTYPE html>
<html lang="fa" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>داشبورد نظارتی کهن‌بن - نسخه پیشرفته</title>
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>
    
    <!-- Leaflet.js for Maps -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

    <!-- Vis.js for Network Graphs -->
    <script type="text/javascript" src="https://unpkg.com/vis-network/standalone/umd/vis-network.min.js"></script>
    
    <!-- DOMPurify for security -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/dompurify/2.4.0/purify.min.js"></script>

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Vazirmatn:wght@400;500;700;800&display=swap" rel="stylesheet">
    
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    
    <style>
        :root {
            --bg-primary: #f0f2f5;
            --bg-secondary: #ffffff;
            --text-primary: #1f2937;
            --text-secondary: #6b7280;
            --border-color: #e5e7eb;
            --sidebar-bg: #1f2937;
            --sidebar-text: #d1d5db;
            --sidebar-text-hover: #ffffff;
            --sidebar-active-bg: #3b82f6;
        }

        html.dark {
            --bg-primary: #111827;
            --bg-secondary: #1f2937;
            --text-primary: #f9fafb;
            --text-secondary: #9ca3af;
            --border-color: #374151;
            --sidebar-bg: #0f172a;
            --sidebar-text: #94a3b8;
            --sidebar-text-hover: #f1f5f9;
            --sidebar-active-bg: #2563eb;
        }

        body {
            font-family: 'Vazirmatn', sans-serif;
            background-color: var(--bg-primary);
            color: var(--text-primary);
            transition: background-color 0.3s, color 0.3s;
        }
        
        .card {
            @apply bg-white dark:bg-slate-800 rounded-xl shadow-sm p-6 border border-gray-200 dark:border-slate-700 transition-colors;
        }
        
        .kpi-card {
            @apply card flex items-center justify-between cursor-pointer hover:shadow-lg hover:border-blue-500 dark:hover:border-blue-500;
        }

        .sidebar {
            background-color: var(--sidebar-bg);
            color: var(--sidebar-text);
            transition: width 0.3s ease-in-out;
        }
        
        .sidebar.collapsed {
            width: 5rem; /* 80px */
        }
        
        .sidebar.collapsed .sidebar-text, .sidebar.collapsed .user-info {
            display: none;
        }
        
        .sidebar.collapsed .sidebar-title-text {
            display: none;
        }
        
        .sidebar.collapsed .sidebar-icon {
            margin-left: 0;
            margin-right: 0;
            font-size: 1.5rem; /* 24px */
        }
        
        .sidebar.collapsed .tab-btn-side {
            justify-content: center;
        }
        
        .tab-btn-side {
            @apply flex items-center px-4 py-3 rounded-lg transition-colors;
            color: var(--sidebar-text);
        }
        .tab-btn-side:hover {
            background-color: #374151; /* A neutral hover for both themes */
            color: var(--sidebar-text-hover);
        }
        .tab-btn-side.active {
            background-color: var(--sidebar-active-bg);
            color: white;
            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
        }

        #leaflet-map {
            height: 400px;
            border-radius: 0.5rem;
        }
        
        .leaflet-popup-content {
            font-family: 'Vazirmatn', sans-serif;
        }

        #fund-flow-graph {
            height: 400px;
            border: 1px dashed var(--border-color);
            border-radius: 0.5rem;
        }
        
        .ai-response-box details {
            @apply border border-gray-200 dark:border-slate-600 rounded-lg mb-2;
        }
        .ai-response-box summary {
            @apply p-3 font-semibold cursor-pointer bg-gray-50 dark:bg-slate-700 rounded-t-lg;
        }
        .ai-response-box .details-content {
            @apply p-4 bg-white dark:bg-slate-800 rounded-b-lg;
        }
        
        /* Modal styles */
        .modal {
            @apply fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 transition-opacity duration-300 opacity-0 pointer-events-none;
        }
        .modal.active {
            @apply opacity-100 pointer-events-auto;
        }
        .modal-content {
            @apply bg-white dark:bg-slate-800 p-6 rounded-lg shadow-xl w-full max-w-2xl transform scale-95 transition-transform duration-300;
        }
        .modal.active .modal-content {
            @apply scale-100;
        }
        
        /* Tooltip */
        [data-tooltip]:hover::after {
            content: attr(data-tooltip);
            @apply absolute bg-slate-800 dark:bg-slate-900 text-white text-xs px-2 py-1 rounded-md -mt-10 ml-4 z-10;
        }

    </style>
</head>
<body class="bg-gray-100 dark:bg-gray-900">

    <div id="app-wrapper" class="flex h-screen">
        <!-- Sidebar -->
        <aside id="sidebar" class="w-64 sidebar flex flex-col p-4 flex-shrink-0">
            <div class="flex items-center gap-3 mb-8 border-b border-slate-700 pb-4">
                <i class="fa-solid fa-building-columns text-3xl text-sky-400 sidebar-title-icon"></i>
                <div class="sidebar-title-text">
                    <h1 class="text-xl font-bold text-white">داشبورد نظارتی</h1>
                    <span class="text-sm text-slate-400">نسخه پیشرفته</span>
                </div>
            </div>
            <nav class="flex flex-col space-y-2">
                <a href="#" class="tab-btn-side active" data-target="overview">
                    <i class="fa-solid fa-chart-pie ml-3 w-5 text-center sidebar-icon"></i><span class="sidebar-text">نمای کلی</span>
                </a>
                <a href="#" class="tab-btn-side" data-target="economic-analysis">
                    <i class="fa-solid fa-magnifying-glass-chart ml-3 w-5 text-center sidebar-icon"></i><span class="sidebar-text">تحلیل کلان</span>
                </a>
                 <a href="#" class="tab-btn-side" data-target="policy-simulation">
                    <i class="fa-solid fa-scale-balanced ml-3 w-5 text-center sidebar-icon"></i><span class="sidebar-text">شبیه‌سازی سیاست</span>
                </a>
                <a href="#" class="tab-btn-side" data-target="anti-corruption">
                    <i class="fa-solid fa-shield-halved ml-3 w-5 text-center sidebar-icon"></i><span class="sidebar-text">مقابله با فساد</span>
                </a>
                <a href="#" class="tab-btn-side" data-target="reporting">
                    <i class="fa-solid fa-file-export ml-3 w-5 text-center sidebar-icon"></i><span class="sidebar-text">گزارش‌گیری</span>
                </a>
            </nav>
            <div class="mt-auto">
                <div class="flex items-center justify-between p-2">
                    <div class="flex items-center gap-3 user-info">
                        <img src="https://placehold.co/40x40/e2e8f0/1e293b?text=U" class="rounded-full" alt="User Avatar">
                        <div>
                            <p class="font-bold text-white">کاربر ناظر</p>
                            <a href="#" class="text-xs text-sky-400 hover:underline">خروج</a>
                        </div>
                    </div>
                    <button id="theme-toggle" class="p-2 rounded-lg hover:bg-slate-700 text-slate-400 hover:text-white">
                        <i class="fa-solid fa-moon"></i>
                    </button>
                    <button id="sidebar-toggle" class="p-2 rounded-lg hover:bg-slate-700 text-slate-400 hover:text-white">
                        <i class="fa-solid fa-bars-staggered"></i>
                    </button>
                </div>
            </div>
        </aside>

        <!-- Main Content -->
        <main class="flex-1 p-4 md:p-8 overflow-y-auto">
            
            <div class="flex justify-between items-center mb-8">
                <h1 class="text-3xl font-bold" id="main-header-title">نمای کلی اقتصاد</h1>
                <button id="ai-kpi-analysis-btn" class="px-4 py-2 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 transition flex items-center gap-2">
                    <i class="fa-solid fa-wand-magic-sparkles"></i> <span class="hidden md:inline">تحلیل هوشمند وضعیت</span>
                </button>
            </div>
            <div id="ai-kpi-response" class="hidden card bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-500/30 mb-8"></div>

            <!-- KPIs -->
            <section id="kpi-section" class="grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                 <div class="kpi-card" data-target="overview">
                    <div>
                        <p class="text-sm font-semibold text-gray-500 dark:text-slate-400" data-tooltip="مجموع ارزش ریالی تراکنش‌های موفق در ۳۰ روز گذشته">حجم کل تراکنش‌ها</p>
                        <p class="text-3xl font-bold" id="kpi-volume">۱.۲۵ تریلیون تومان</p>
                        <p class="text-sm font-semibold" id="kpi-volume-change"><span class="text-green-500"><i class="fa-solid fa-arrow-up"></i> ۵.۲٪</span></p>
                    </div>
                </div>
                <div class="kpi-card" data-target="overview">
                    <div>
                        <p class="text-sm font-semibold text-gray-500 dark:text-slate-400" data-tooltip="مجموع ارزش دارایی‌های ثبت شده در سامانه">ارزش کل دارایی‌ها</p>
                        <p class="text-3xl font-bold" id="kpi-tvl">۸۹.۴ تریلیون تومان</p>
                        <p class="text-sm font-semibold" id="kpi-tvl-change"><span class="text-green-500"><i class="fa-solid fa-arrow-up"></i> ۱.۸٪</span></p>
                    </div>
                </div>
                <div class="kpi-card" data-target="overview">
                    <div>
                        <p class="text-sm font-semibold text-gray-500 dark:text-slate-400">نهادهای فعال</p>
                        <p class="text-3xl font-bold" id="kpi-entities">۱۲,۴۵۰</p>
                        <p class="text-sm font-semibold" id="kpi-entities-change"><span class="text-red-500"><i class="fa-solid fa-arrow-down"></i> ۰.۵٪</span></p>
                    </div>
                </div>
                <div class="kpi-card" data-target="anti-corruption">
                    <div>
                        <p class="text-sm font-semibold text-gray-500 dark:text-slate-400">هشدارهای فعال</p>
                        <p class="text-3xl font-bold text-red-500" id="kpi-alerts">۱۷</p>
                        <p class="text-sm font-semibold" id="kpi-alerts-change"><span class="text-red-500"><i class="fa-solid fa-arrow-up"></i> ۲ مورد جدید</span></p>
                    </div>
                </div>
            </section>

            <!-- Main Dashboard Area -->
            <div>
                <!-- Overview Section -->
                <section id="overview" class="content-section active space-y-6">
                    <div class="grid lg:grid-cols-3 gap-6">
                        <div class="lg:col-span-2 card">
                            <h3 class="font-bold mb-4">روند حجم تراکنش‌ها (ماهانه)</h3>
                            <div class="h-[350px] w-full">
                                <canvas id="transactionVolumeChart"></canvas>
                            </div>
                        </div>
                        <div class="card">
                            <h3 class="font-bold mb-4">تفکیک دارایی‌های توکنیزه</h3>
                            <div class="h-[350px] w-full flex items-center justify-center">
                                <canvas id="assetBreakdownChart"></canvas>
                            </div>
                        </div>
                    </div>
                </section>
                
                <!-- Economic Analysis Section -->
                <section id="economic-analysis" class="content-section space-y-6">
                    <div class="card">
                        <h3 class="font-bold mb-4">نقشه حرارتی فعالیت اقتصادی</h3>
                        <div id="leaflet-map"></div>
                    </div>
                    <div class="card">
                        <div class="flex justify-between items-center mb-4">
                            <h3 class="font-bold">فعالیت بر اساس بخش اقتصادی</h3>
                            <div class="flex gap-2">
                                <select id="sector-time-filter" class="bg-gray-50 dark:bg-slate-700 border border-gray-300 dark:border-slate-600 text-sm rounded-lg p-2">
                                    <option value="monthly">ماهانه</option>
                                    <option value="quarterly">فصلی</option>
                                    <option value="yearly">سالانه</option>
                                </select>
                            </div>
                        </div>
                        <div class="h-[350px] w-full">
                            <canvas id="sectorActivityChart"></canvas>
                        </div>
                    </div>
                </section>
                
                <!-- Policy Simulation Section -->
                <section id="policy-simulation" class="content-section">
                    <div class="card">
                        <h3 class="font-bold mb-4">شبیه‌سازی اثرات سیاست‌گذاری</h3>
                        <p class="text-sm text-secondary mb-4">یک سیاست جدید را وارد کنید یا از الگوها استفاده کنید تا مدیریت هوشمند ملی اثرات آن را تحلیل کند.</p>
                        <div class="flex gap-2 mb-4 flex-wrap">
                            <button class="policy-template-btn">افزایش ۲٪ مالیات املاک</button>
                            <button class="policy-template-btn">کاهش سقف تراکنش روزانه</button>
                            <button class="policy-template-btn">اعمال کارمزد بر دارایی طلا</button>
                        </div>
                        <textarea id="policy-input" class="w-full p-3 border rounded-md bg-transparent dark:border-slate-600" rows="4" placeholder="مثال: افزایش ۲ درصدی مالیات بر تراکنش‌های املاک با ارزش بالای ۱۰ میلیارد تومان"></textarea>
                        <button id="ai-policy-simulation-btn" class="mt-4 px-6 py-2 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 transition flex items-center gap-2">
                            <i class="fa-solid fa-wand-magic-sparkles"></i> شبیه‌سازی اثرات
                        </button>
                        <div id="ai-policy-response" class="hidden ai-response-box mt-6"></div>
                    </div>
                </section>

                <!-- Anti-Corruption Section -->
                <section id="anti-corruption" class="content-section space-y-6">
                    <div class="card">
                        <h3 class="font-bold mb-4">رهگیری جریان وجوه</h3>
                        <div class="flex gap-2 mb-4">
                            <input type="text" id="fund-flow-search" placeholder="شناسه نهاد یا شخص..." class="w-full p-2 border rounded-md bg-transparent dark:border-slate-600">
                            <button id="fund-flow-btn" class="px-4 py-2 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700">رهگیری</button>
                        </div>
                        <div id="fund-flow-graph"></div>
                    </div>
                    <div class="card">
                         <h3 class="font-bold mb-4">تراکنش‌های مشکوک و امتیاز انطباق</h3>
                        <div class="overflow-x-auto">
                            <table class="w-full">
                                <thead class="border-b dark:border-slate-700">
                                    <tr>
                                        <th class="p-3 text-right text-sm font-semibold text-gray-600 dark:text-slate-400">شناسه</th>
                                        <th class="p-3 text-right text-sm font-semibold text-gray-600 dark:text-slate-400">مبلغ</th>
                                        <th class="p-3 text-right text-sm font-semibold text-gray-600 dark:text-slate-400">فرستنده</th>
                                        <th class="p-3 text-right text-sm font-semibold text-gray-600 dark:text-slate-400">گیرنده</th>
                                        <th class="p-3 text-right text-sm font-semibold text-gray-600 dark:text-slate-400">اقدامات</th>
                                    </tr>
                                </thead>
                                <tbody id="transactions-table-body"></tbody>
                            </table>
                        </div>
                    </div>
                </section>

                <!-- Reporting Section -->
                <section id="reporting" class="content-section">
                    <div class="card">
                         <h3 class="font-bold mb-4">ایجاد گزارش سفارشی</h3>
                         <div class="grid md:grid-cols-3 gap-4">
                             <div>
                                 <label for="report-type" class="block text-sm font-medium text-secondary">نوع گزارش</label>
                                 <select id="report-type" class="mt-1 block w-full p-2 border rounded-md bg-transparent dark:border-slate-600">
                                     <option>حجم تراکنش</option>
                                     <option>نهادهای پرریسک</option>
                                     <option>رشد بخشی</option>
                                 </select>
                             </div>
                             <div>
                                 <label for="report-start-date" class="block text-sm font-medium text-secondary">از تاریخ</label>
                                 <input type="date" id="report-start-date" class="mt-1 block w-full p-2 border rounded-md bg-transparent dark:border-slate-600">
                             </div>
                             <div>
                                 <label for="report-end-date" class="block text-sm font-medium text-secondary">تا تاریخ</label>
                                 <input type="date" id="report-end-date" class="mt-1 block w-full p-2 border rounded-md bg-transparent dark:border-slate-600">
                             </div>
                         </div>
                         <div class="mt-6 flex justify-end gap-3">
                             <button id="ai-narrative-report-btn" class="px-6 py-2 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 transition flex items-center gap-2"><i class="fa-solid fa-wand-magic-sparkles"></i>تولید گزارش روایی</button>
                             <button class="px-6 py-2 bg-teal-600 text-white font-semibold rounded-lg hover:bg-teal-700 transition"><i class="fa-solid fa-file-csv ml-2"></i>خروجی CSV</button>
                         </div>
                         <div id="ai-report-response-container" class="hidden mt-6">
                            <h4 class="font-bold mb-2">گزارش تولید شده:</h4>
                            <div id="ai-report-response" class="card bg-gray-50 dark:bg-slate-900 p-4" contenteditable="true"></div>
                         </div>
                    </div>
                </section>
            </div>
        </main>
    </div>

    <!-- Transaction Details Modal -->
    <div id="transaction-modal" class="modal">
        <div class="modal-content">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-bold">جزئیات تراکنش</h3>
                <button id="modal-close-btn" class="text-2xl text-gray-500 hover:text-gray-800 dark:hover:text-white">&times;</button>
            </div>
            <div id="modal-body" class="space-y-4">
                <!-- Content will be injected by JS -->
            </div>
        </div>
    </div>

    <script>
    // Self-executing anonymous function to encapsulate the application logic
    (function() {
        document.addEventListener('DOMContentLoaded', function() {
            // --- Application State & Configuration ---
            const API_KEY = ""; 
            const API_MODEL = "gemini-2.5-flash-preview-05-20";
            let activeCharts = {}; // To store chart instances for updates
            let leafletMap = null;
            let fundFlowNetwork = null;

            // --- Mock Data Simulation ---
            // This simulates fetching data from a real API with a delay.
            const mockAPI = {
                getDashboardData: async () => {
                    await new Promise(res => setTimeout(res, 500)); // Simulate network latency
                    return {
                        kpis: {
                            volume: { value: 1250, change: 5.2 },
                            tvl: { value: 89.4, change: 1.8 },
                            entities: { value: 12450, change: -0.5 },
                            alerts: { value: 17, change: 2 }
                        },
                        transactionVolume: {
                            labels: ['فروردین', 'اردیبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور'],
                            data: [850, 950, 1100, 1050, 1200, 1250]
                        },
                        assetBreakdown: { labels: ['املاک', 'خودرو', 'سهام', 'طلا', 'سایر'], data: [45, 25, 15, 10, 5] },
                        sectorActivity: {
                            monthly: { labels: ['ساخت و ساز', 'خدمات مالی', 'صنعت', 'کشاورزی', 'خرده فروشی'], data: [35, 25, 20, 12, 8] },
                            quarterly: { labels: ['ساخت و ساز', 'خدمات مالی', 'صنعت', 'کشاورزی', 'خرده فروشی'], data: [40, 22, 18, 10, 10] },
                            yearly: { labels: ['ساخت و ساز', 'خدمات مالی', 'صنعت', 'کشاورزی', 'خرده فروشی'], data: [38, 28, 15, 11, 8] }
                        },
                        transactions: [
                            { id: 'TX789012', amount: '۲۵ میلیارد', from: {name: 'شرکت الف', score: 92}, to: {name: 'شرکت ب', score: 75}, timestamp: '2023-08-15T10:30:00Z' },
                            { id: 'TX789013', amount: '۵ میلیارد', from: {name: 'شخص حقیقی ۱', score: 98}, to: {name: 'شخص حقیقی ۲', score: 95}, timestamp: '2023-08-14T14:00:00Z' },
                            { id: 'TX789014', amount: '۱۲۰ میلیارد', from: {name: 'صندوق ج', score: 88}, to: {name: 'شرکت د', score: 61}, timestamp: '2023-08-12T09:00:00Z' },
                        ],
                        geoData: { // Volume in trillions
                            "تهران": 350, "اصفهان": 90, "خراسان رضوی": 110, "فارس": 75, "آذربایجان شرقی": 60, "خوزستان": 55, "مازندران": 50
                        }
                    };
                }
            };

            // --- UI Element Selectors ---
            const ui = {
                sidebar: document.getElementById('sidebar'),
                sidebarToggle: document.getElementById('sidebar-toggle'),
                themeToggle: document.getElementById('theme-toggle'),
                mainHeader: document.getElementById('main-header-title'),
                tabButtons: document.querySelectorAll('.tab-btn-side'),
                contentSections: document.querySelectorAll('.content-section'),
                kpiCards: document.querySelectorAll('.kpi-card'),
                policyTemplates: document.querySelectorAll('.policy-template-btn'),
                policyInput: document.getElementById('policy-input'),
                transactionModal: document.getElementById('transaction-modal'),
                modalCloseBtn: document.getElementById('modal-close-btn'),
                modalBody: document.getElementById('modal-body'),
            };
            
            // --- Gemini API Call Function ---
            const callGeminiAPI = async (prompt) => {
                const payload = { contents: [{ parts: [{ text: prompt }] }] };
                try {
                    const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/${API_MODEL}:generateContent?key=${API_KEY}`, {
                        method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload)
                    });
                    if (!response.ok) throw new Error(`API Error: ${response.status}`);
                    const result = await response.json();
                    return result?.candidates?.[0]?.content?.parts?.[0]?.text || null;
                } catch (error) {
                    console.error('API call failed:', error);
                    return 'متأسفانه در برقراری ارتباط با سرویس مدیریت هوشمند ملی مشکلی پیش آمده است.';
                }
            };

            const showLoading = (element) => {
                element.innerHTML = `<div class="flex items-center justify-center gap-2"><div class="animate-spin rounded-full h-5 w-5 border-b-2 border-blue-500"></div><span>در حال پردازش...</span></div>`;
                element.classList.remove('hidden');
            };

            // --- Charting Functions ---
            const renderTransactionVolumeChart = (data) => {
                const ctx = document.getElementById('transactionVolumeChart').getContext('2d');
                if (activeCharts.volume) activeCharts.volume.destroy();
                const movingAverage = data.data.map((_, i, arr) => {
                    const sub = arr.slice(Math.max(0, i - 2), i + 1);
                    return sub.reduce((a, b) => a + b, 0) / sub.length;
                });
                activeCharts.volume = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: data.labels,
                        datasets: [
                            { type: 'bar', label: 'حجم تراکنش', data: data.data, backgroundColor: 'rgba(59, 130, 246, 0.5)', borderColor: 'rgba(59, 130, 246, 1)', borderWidth: 1, borderRadius: 5 },
                            { type: 'line', label: 'میانگین متحرک', data: movingAverage, borderColor: 'rgba(234, 179, 8, 1)', tension: 0.4, fill: false }
                        ]
                    },
                    options: { responsive: true, maintainAspectRatio: false, scales: { y: { beginAtZero: true } }, plugins: { legend: { display: true, position: 'top' } } }
                });
            };
            
            const renderAssetBreakdownChart = (data) => {
                const ctx = document.getElementById('assetBreakdownChart').getContext('2d');
                if (activeCharts.asset) activeCharts.asset.destroy();
                activeCharts.asset = new Chart(ctx, {
                    type: 'doughnut', data: { labels: data.labels, datasets: [{ data: data.data, backgroundColor: ['#3b82f6', '#14b8a6', '#8b5cf6', '#f59e0b', '#64748b'] }] },
                    options: { responsive: true, maintainAspectRatio: false, plugins: { legend: { position: 'bottom' } } }
                });
            };

            const renderSectorActivityChart = (data) => {
                const ctx = document.getElementById('sectorActivityChart').getContext('2d');
                if (activeCharts.sector) activeCharts.sector.destroy();
                activeCharts.sector = new Chart(ctx, {
                    type: 'polarArea', data: { labels: data.labels, datasets: [{ data: data.data, backgroundColor: ['rgba(239, 68, 68, 0.7)', 'rgba(245, 158, 11, 0.7)', 'rgba(59, 130, 246, 0.7)', 'rgba(16, 185, 129, 0.7)', 'rgba(107, 114, 128, 0.7)'] }] },
                    options: { responsive: true, maintainAspectRatio: false, plugins: { legend: { position: 'bottom' } } }
                });
            };
            
            // --- Map Function ---
            const renderHeatMap = async (geoData) => {
                if(leafletMap) leafletMap.remove();
                leafletMap = L.map('leaflet-map').setView([32.4279, 53.6880], 5);
                L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {
                    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>',
                    subdomains: 'abcd',
                    maxZoom: 19
                }).addTo(leafletMap);
                
                // Fetch GeoJSON for Iran provinces
                const response = await fetch('https://raw.githubusercontent.com/codeforiran/choropleth-iran-geojson/master/geojson/public/iran_provinces_counties.geojson');
                const iranGeoJSON = await response.json();

                function getColor(d) {
                    return d > 300 ? '#800026' : d > 100 ? '#BD0026' : d > 80 ? '#E31A1C' : d > 60 ? '#FC4E2A' : d > 40 ? '#FD8D3C' : '#FEB24C';
                }

                function style(feature) {
                    const provinceName = feature.properties.name_fa;
                    const value = geoData[provinceName] || 0;
                    return {
                        fillColor: getColor(value),
                        weight: 2,
                        opacity: 1,
                        color: 'white',
                        dashArray: '3',
                        fillOpacity: 0.7
                    };
                }
                
                L.geoJson(iranGeoJSON, {
                    style: style,
                    onEachFeature: (feature, layer) => {
                        const provinceName = feature.properties.name_fa;
                        const value = geoData[provinceName] || 0;
                        layer.bindPopup(`<b>${provinceName}</b><br>حجم تراکنش: ${value} تریلیون تومان`);
                    }
                }).addTo(leafletMap);
            };

            // --- Network Graph Function ---
            const renderFundFlowGraph = (entityId) => {
                const container = document.getElementById('fund-flow-graph');
                // Mock data for graph
                const nodes = new vis.DataSet([
                    {id: 1, label: entityId, color: '#f87171', size: 30},
                    {id: 2, label: 'شرکت آلفا'}, {id: 3, label: 'صندوق بتا'},
                    {id: 4, label: 'شخص ایکس'}, {id: 5, label: 'نهاد گاما'},
                    {id: 6, label: 'شرکت تتا'},
                ]);
                const edges = new vis.DataSet([
                    {from: 2, to: 1, arrows: 'to', label: '۱۰میلیارد'},
                    {from: 3, to: 1, arrows: 'to', label: '۵میلیارد'},
                    {from: 1, to: 4, arrows: 'to', label: '۳میلیارد'},
                    {from: 1, to: 5, arrows: 'to', label: '۸میلیارد'},
                    {from: 5, to: 6, arrows: 'to', label: '۲میلیارد', dashes: true},
                ]);
                const data = { nodes: nodes, edges: edges };
                const options = {
                    layout: { hierarchical: false },
                    edges: { color: '#9ca3af' },
                    physics: { stabilization: true },
                    nodes: { font: { face: 'Vazirmatn' } }
                };
                if(fundFlowNetwork) fundFlowNetwork.destroy();
                fundFlowNetwork = new vis.Network(container, data, options);
            };

            // --- UI Rendering Functions ---
            const updateKpis = (kpis) => {
                document.getElementById('kpi-volume').innerText = `${kpis.volume.value / 1000} تریلیون تومان`;
                document.getElementById('kpi-tvl').innerText = `${kpis.tvl.value} تریلیون تومان`;
                document.getElementById('kpi-entities').innerText = kpis.entities.value.toLocaleString('fa-IR');
                document.getElementById('kpi-alerts').innerText = kpis.alerts.value;

                const createChangeHtml = (value, unit = '%') => {
                    const color = value > 0 ? 'text-green-500' : 'text-red-500';
                    const icon = value > 0 ? 'fa-arrow-up' : 'fa-arrow-down';
                    return `<span class="${color}"><i class="fa-solid ${icon}"></i> ${Math.abs(value)}${unit}</span>`;
                };
                document.getElementById('kpi-volume-change').innerHTML = createChangeHtml(kpis.volume.change);
                document.getElementById('kpi-tvl-change').innerHTML = createChangeHtml(kpis.tvl.change);
                document.getElementById('kpi-entities-change').innerHTML = createChangeHtml(kpis.entities.change);
                document.getElementById('kpi-alerts-change').innerHTML = createChangeHtml(kpis.alerts.change, ' مورد جدید');
            };
            
            const renderTransactionsTable = (transactions) => {
                const tbody = document.getElementById('transactions-table-body');
                const getScoreClass = (score) => score > 90 ? 'bg-green-100 text-green-800' : score > 70 ? 'bg-yellow-100 text-yellow-800' : 'bg-red-100 text-red-800';
                tbody.innerHTML = transactions.map(tx => `
                    <tr class="border-b dark:border-slate-700 hover:bg-gray-50 dark:hover:bg-slate-700/50">
                        <td class="p-3 text-sm font-mono">${tx.id}</td>
                        <td class="p-3 text-sm font-bold">${tx.amount}</td>
                        <td class="p-3 text-sm">${tx.from.name} <span class="px-2 py-1 text-xs font-bold rounded-full ${getScoreClass(tx.from.score)}">${tx.from.score}</span></td>
                        <td class="p-3 text-sm">${tx.to.name} <span class="px-2 py-1 text-xs font-bold rounded-full ${getScoreClass(tx.to.score)}">${tx.to.score}</span></td>
                        <td class="p-3 text-sm"><button class="details-btn text-blue-500 hover:underline" data-id="${tx.id}">بررسی</button></td>
                    </tr>
                `).join('');
                
                // Re-attach event listeners for the new buttons
                document.querySelectorAll('.details-btn').forEach(btn => {
                    btn.addEventListener('click', () => showTransactionDetails(btn.dataset.id, transactions));
                });
            };
            
            const showTransactionDetails = (txId, allTransactions) => {
                const tx = allTransactions.find(t => t.id === txId);
                if (!tx) return;
                
                ui.modalBody.innerHTML = `
                    <p><strong>شناسه:</strong> <span class="font-mono">${tx.id}</span></p>
                    <p><strong>مبلغ:</strong> ${tx.amount} تومان</p>
                    <p><strong>زمان:</strong> ${new Date(tx.timestamp).toLocaleString('fa-IR')}</p>
                    <div class="grid grid-cols-2 gap-4 mt-4">
                        <div class="p-3 bg-gray-100 dark:bg-slate-700 rounded-lg">
                            <h4 class="font-bold">فرستنده</h4>
                            <p>${tx.from.name}</p>
                            <p>امتیاز انطباق: ${tx.from.score}</p>
                        </div>
                        <div class="p-3 bg-gray-100 dark:bg-slate-700 rounded-lg">
                            <h4 class="font-bold">گیرنده</h4>
                            <p>${tx.to.name}</p>
                            <p>امتیاز انطباق: ${tx.to.score}</p>
                        </div>
                    </div>
                `;
                ui.transactionModal.classList.add('active');
            };

            // --- Event Listeners ---
            const setupEventListeners = (data) => {
                // Theme Toggle
                ui.themeToggle.addEventListener('click', () => {
                    const html = document.documentElement;
                    html.classList.toggle('dark');
                    ui.themeToggle.innerHTML = html.classList.contains('dark') ? '<i class="fa-solid fa-sun"></i>' : '<i class="fa-solid fa-moon"></i>';
                });

                // Sidebar Toggle
                ui.sidebarToggle.addEventListener('click', () => {
                    ui.sidebar.classList.toggle('collapsed');
                    // Force charts and maps to redraw after transition
                    setTimeout(() => {
                        Object.values(activeCharts).forEach(chart => chart.resize());
                        if(leafletMap) leafletMap.invalidateSize();
                        if(fundFlowNetwork) fundFlowNetwork.fit();
                    }, 300);
                });
                
                // Tab Navigation
                ui.tabButtons.forEach(button => {
                    button.addEventListener('click', (e) => {
                        e.preventDefault();
                        const targetId = button.dataset.target;
                        ui.contentSections.forEach(section => section.classList.remove('active'));
                        document.getElementById(targetId).classList.add('active');
                        ui.tabButtons.forEach(btn => btn.classList.remove('active'));
                        button.classList.add('active');
                        ui.mainHeader.innerText = button.querySelector('.sidebar-text').innerText.trim();
                        // Trigger redraw for map/graph if they are in the activated tab
                        if (targetId === 'economic-analysis' && leafletMap) leafletMap.invalidateSize();
                        if (targetId === 'anti-corruption' && fundFlowNetwork) fundFlowNetwork.fit();
                    });
                });
                
                // KPI Card Clicks
                ui.kpiCards.forEach(card => {
                    card.addEventListener('click', () => {
                        const targetTab = document.querySelector(`.tab-btn-side[data-target="${card.dataset.target}"]`);
                        if (targetTab) targetTab.click();
                    });
                });

                // Sector Chart Filter
                document.getElementById('sector-time-filter').addEventListener('change', (e) => {
                    renderSectorActivityChart(data.sectorActivity[e.target.value]);
                });

                // Policy Simulation
                ui.policyTemplates.forEach(btn => {
                    btn.addEventListener('click', () => { ui.policyInput.value = btn.innerText; });
                });
                
                document.getElementById('ai-policy-simulation-btn').addEventListener('click', async () => {
                    const policyText = ui.policyInput.value;
                    if (!policyText) return;
                    const responseBox = document.getElementById('ai-policy-response');
                    showLoading(responseBox);
                    const prompt = `شما یک اقتصاددان و تحلیلگر سیاست‌گذاری هستید. اثرات احتمالی سیاست زیر را تحلیل کن. پاسخ باید در قالب بخش‌های مجزا با عنوان‌های #اثرات_مثبت، #ریسک‌ها، #پیش‌بینی_حجم_معاملات، و #پیشنهادها باشد. برای هر بخش یک امتیاز اطمینان از ۰ تا ۱۰۰ درصد با عنوان #اطمینان ذکر کن.\n\nسیاست: "${policyText}"`;
                    const response = await callGeminiAPI(prompt);
                    const formattedHtml = response
                        .replace(/#اثرات_مثبت/g, '</details><details open><summary>✅ اثرات مثبت مورد انتظار</summary><div class="details-content">')
                        .replace(/#ریسک‌ها/g, '</div></details><details open><summary>⚠️ ریسک‌ها و پیامدهای ناخواسته</summary><div class="details-content">')
                        .replace(/#پیش‌بینی_حجم_معاملات/g, '</div></details><details open><summary>📊 پیش‌بینی تاثیر بر حجم معاملات</summary><div class="details-content">')
                        .replace(/#پیشنهادها/g, '</div></details><details open><summary>💡 پیشنهادهای تکمیلی</summary><div class="details-content">')
                        .replace(/#اطمینان/g, '</div><div class="p-2 mt-2 text-xs font-bold text-center bg-gray-200 dark:bg-slate-600 rounded-md">اطمینان تحلیل:')
                        .replace(/\n/g, '<br>');
                    responseBox.innerHTML = DOMPurify.sanitize(formattedHtml.substring(10) + '</div></details>');
                });

                // Fund Flow Graph
                document.getElementById('fund-flow-btn').addEventListener('click', () => {
                    const entityId = document.getElementById('fund-flow-search').value || 'شرکت نمونه';
                    renderFundFlowGraph(entityId);
                });
                
                // Narrative Report
                document.getElementById('ai-narrative-report-btn').addEventListener('click', async () => {
                    const responseContainer = document.getElementById('ai-report-response-container');
                    const responseBox = document.getElementById('ai-report-response');
                    showLoading(responseBox);
                    responseContainer.classList.remove('hidden');
                    const prompt = `شما یک تحلیلگر ارشد هستید. یک گزارش روایی کوتاه (۲ پاراگراف) بر اساس این داده‌ها بنویسید: نوع گزارش: ${document.getElementById('report-type').value}, بازه زمانی: از ${document.getElementById('report-start-date').value} تا ${document.getElementById('report-end-date').value}. تمرکز اصلی بر دارایی‌های حوزه املاک با روند صعودی است.`;
                    const response = await callGeminiAPI(prompt);
                    responseBox.innerHTML = DOMPurify.sanitize(response.replace(/\n/g, '<br>'));
                });

                // Modal close
                ui.modalCloseBtn.addEventListener('click', () => ui.transactionModal.classList.remove('active'));
                ui.transactionModal.addEventListener('click', (e) => {
                    if (e.target === ui.transactionModal) ui.transactionModal.classList.remove('active');
                });
            };

            // --- Initial Application Load ---
            const initializeDashboard = async () => {
                const data = await mockAPI.getDashboardData();
                updateKpis(data.kpis);
                renderTransactionVolumeChart(data.transactionVolume);
                renderAssetBreakdownChart(data.assetBreakdown);
                renderSectorActivityChart(data.sectorActivity.monthly);
                renderTransactionsTable(data.transactions);
                renderHeatMap(data.geoData);
                renderFundFlowGraph('شرکت نمونه'); // Initial graph
                setupEventListeners(data);
            };

            initializeDashboard();
        });
    })();
    </script>
</body>
</html>
